/*На вход программе подается большое (миллиарды) количество 4-х байтных неотрицательных чисел.
Числа могут повторяться. Точно известно, что одного из чисел во входном потоке нет.
Найдите и распечатайте это число используя минимум вычислительных ресурсов.
Подсказка: хэш-таблица. Для получения максимальных баллов за задачу необходимо
использовать менее 512мб памяти в среднем и не более 512мб в пике(2^32 бит)
(+- 1кб на стеке не включается в эти лимиты).*/

#include <iostream>

int main() {
    u_int64_t count = 0;
    std::cin >> count;

    //пусть каждый бит хранит описание 8 чисел
    u_int8_t buffer[0b10000000000000];
    for(u_int64_t i = 0; i < 0b10000000000000; i++){
        buffer[i] = 0b00000000; //обнуляем память
    }

    u_int32_t one_num = 0;
    for(u_int64_t i = 0; i < count; i++){
        std::cin >> one_num; // берём число
        //первые 3 байта - номер ячейки,
        //последний байт - номер бита в байте
        buffer[one_num >> 3] |= 1 << (one_num & 0b11111111); //быстро и нечитаемо
        //суть - добавить бит n-й с начала массива для числа n
    }

    //последовательно выводим все неупомянутые числа
    for(u_int64_t i = 0; i < 0b10000000000000; i++){
        for(u_int8_t j = 1, position = 0; j != 0b10000000; j <<= 1, position++){
            if(!(buffer[i] & j)){ //если небыло
                std::cout << ((i << 3) + position) << ' ';
            }
        }

    }
    std::cout << std::endl;
    return 0;
}
